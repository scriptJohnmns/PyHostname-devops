name: '1. Provisionar e Preparar a Infraestrutura'

on:  
  workflow_dispatch:
    inputs:
      action:
        description: 'Apply (criar/preparar) ou Destroy (destruir)'
        required: true
        default: 'apply'
        type: choice
        options:
        - apply
        - destroy


jobs:  
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra/terraform
    
    outputs:
      public_ip: ${{ steps.get_ip.outputs.public_ip }}

    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v4

      - name: Configurar Credenciais da AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 

      - name: Setup do Terraform e Init
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false 
      - run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve
      
      - name: Salvar IP Público como Output
        if: github.event.inputs.action == 'apply'
        id: get_ip
        run: echo "public_ip=$(terraform output -raw public_ip)" >> $GITHUB_OUTPUT

  # --- JOB B: EXECUTAR O ANSIBLE SETUP ---
  ansible-setup:
    name: 'Ansible Server Setup'
    runs-on: ubuntu-latest    
    needs: terraform 

    if: needs.terraform.result == 'success' && github.event.inputs.action == 'apply'

    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v4

      - name: Instalar Ansible e dependências
        run: pip install ansible

      - name: Preparar Chave SSH
        run: |          
          echo "${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Executar Playbook de Setup do Servidor
        run: |
         export ANSIBLE_HOST_KEY_CHECKING=False   
         ansible-playbook -i "${{ needs.terraform.outputs.public_ip }}," \
                           --user ec2-user \
                           --private-key private_key.pem \
                           infra/ansible/setup-server.yml